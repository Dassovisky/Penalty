import type { ReactNode } from 'react';
declare type HighlightType = 'collection' | 'promotion' | 'teaser';
interface Filter {
    type: 'hide' | 'show';
    highlightNames: string[];
}
interface ProductHighlightsProps {
    filter?: Filter;
    type?: HighlightType;
    children: NonNullable<ReactNode>;
}
interface Highlight {
    id?: string;
    name: string;
}
interface ProductHighlightContextProviderProps {
    highlight: Highlight;
    type: HighlightType;
}
declare function ProductHighlights({ filter, type, children, }: ProductHighlightsProps): JSX.Element | null;
declare namespace ProductHighlights {
    var schema: {
        title: string;
        type: string;
        properties: {
            filter: {
                title: string;
                type: string;
                properties: {
                    type: {
                        title: string;
                        type: string;
                        enum: string[];
                        enumNames: string[];
                    };
                    highlightNames: {
                        title: string;
                        type: string;
                        minItems: number;
                        maxItems: number;
                        items: {
                            title: string;
                            type: string;
                            default: string;
                        };
                    };
                };
            };
            type: {
                title: string;
                type: string;
                enum: string[];
                enumNames: string[];
            };
        };
    };
}
export declare const useHighlight: () => ProductHighlightContextProviderProps | null;
export default ProductHighlights;
