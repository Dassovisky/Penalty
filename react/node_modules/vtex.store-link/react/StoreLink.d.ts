import React from 'react';
import { Variant } from './modules/useButtonClasses';
declare type DisplayMode = 'anchor' | 'button';
declare type Size = 'small' | 'regular' | 'large';
export interface ButtonProps {
    variant: Variant;
    size: Size;
}
declare type RequireOnlyOne<T, Keys extends keyof T = keyof T> = Pick<T, Exclude<keyof T, Keys>> & {
    [K in Keys]-?: Required<Pick<T, K>> & Partial<Record<Exclude<Keys, K>, undefined>>;
}[Keys];
interface AllProps {
    href?: string;
    label: string;
    target?: string;
    scrollTo?: string;
    escapeLinkRegex?: string;
    children: React.ReactNode;
    displayMode?: DisplayMode;
    buttonProps?: Partial<ButtonProps>;
    rel?: string;
}
export declare type Props = RequireOnlyOne<AllProps, 'label' | 'children'>;
export declare const defaultButtonProps: ButtonProps;
declare function StoreLink(props: Props): JSX.Element;
declare namespace StoreLink {
    var schema: {
        title: string;
    };
}
export default StoreLink;
